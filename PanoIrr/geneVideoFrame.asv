% Pano stimuli preparation
% Save stimuli parameters to mat file
% Generate frames and save for each pano
% Irregular condition
%
% By Qihao He, May 2025
clear; 
clc;

CurPath = pwd;

%% Load pano parameters
IrrParameters = readtable('IrregularPanoParameters.xlsx');
panoNum = 60;

%% Generate IrrPanoList
for p = 1:panoNum
    % Pano num
    IrrPano(p).num = IrrParameters.Num(p);
    % Pano file name
    IrrPano(p).name = IrrParameters.PanoName(p);
    % North rotation
    IrrPano(p).north = IrrParameters.NorthRotation(p);
    % Compute road location based on north rotation
    IrrPano(p).r1 = mod(IrrParameters.RoadRotation1_N(p) + IrrPano(p).north, 360);
    IrrPano(p).r2 = mod(IrrParameters.RoadRotation2_N(p) + IrrPano(p).north, 360);
    IrrPano(p).r3 = mod(IrrParameters.RoadRotation3_N(p) + IrrPano(p).north, 360);
    IrrPano(p).r4 = mod(IrrParameters.RoadRotation4_N(p) + IrrPano(p).north, 360);

    % Decide vx_start, by comparing Road1 & Road4, which is nearer to north
    angle1 = IrrParameters.RoadRotation1_N(p);
    angle4 = 360 - IrrParameters.RoadRotation4_N(p);
    % Compare, always face the middle of the north road, rad
    if angle1 <= angle4  % north: road1
        IrrPano(p).start = deg2rad(IrrPano(p).r1) - pi;
        IrrPano(p).halfAngle1 = - floor((IrrParameters.RoadRotation1_N(p) + 360 - IrrParameters.RoadRotation4_N(p)) / 2); % negative
        IrrPano(p).halfAngle2 = floor((IrrParameters.RoadRotation2_N(p) - IrrParameters.RoadRotation1_N(p)) / 2); % positive
        % Record centered road rotations
        IrrPano(p).cr1 = 0;
        IrrPano(p).cr2 = mod(IrrParameters.RoadRotation2_N(p) + IrrPano(p).north, 360);
        IrrPano(p).cr3 = mod(IrrParameters.RoadRotation3_N(p) + IrrPano(p).north, 360);
        IrrPano(p).cr4 = mod(IrrParameters.RoadRotation4_N(p) + IrrPano(p).north, 360);
    else  % north: road4
        IrrPano(p).start = deg2rad(IrrPano(p).r4) - pi;
        IrrPano(p).halfAngle1 = - floor((IrrParameters.RoadRotation4_N(p) - IrrParameters.RoadRotation3_N(p)) / 2);
        IrrPano(p).halfAngle2 = floor((IrrParameters.RoadRotation1_N(p) + 360 - IrrParameters.RoadRotation4_N(p)) / 2);
    end
    % align range
    IrrPano(p).range = IrrPano(p).halfAngle2 - IrrPano(p).halfAngle1;
end

% Save IrrPano
save(fullfile(CurPath, 'IrrPanoList.mat'), 'IrrPano');

%% Generate IrrPracList
for p = 1:2
    % Pano num
    IrrPrac(p).num = p;
    % Pano file name
    IrrPrac(p).name = IrrParameters.PanoName(p + panoNum);
    % North rotation
    IrrPrac(p).north = IrrParameters.NorthRotation(p + panoNum);
    % Compute road location based on north rotation
    IrrPrac(p).r1 = mod(IrrParameters.RoadRotation1_N(p + panoNum) + IrrPrac(p).north, 360);
    IrrPrac(p).r2 = mod(IrrParameters.RoadRotation2_N(p + panoNum) + IrrPrac(p).north, 360);
    IrrPrac(p).r3 = mod(IrrParameters.RoadRotation3_N(p + panoNum) + IrrPrac(p).north, 360);
    IrrPrac(p).r4 = mod(IrrParameters.RoadRotation4_N(p + panoNum) + IrrPrac(p).north, 360);

    % Decide vx_start, by comparing r1 & r4, which is nearer to north
    angle1 = IrrParameters.RoadRotation1_N(p + panoNum);
    angle4 = 360 - IrrParameters.RoadRotation4_N(p + panoNum);
    % Compare, always face the middle of the north road, rad
    if angle1 <= angle4
        IrrPrac(p).start = deg2rad(IrrPrac(p).r1) - pi;
    else
        IrrPrac(p).start = deg2rad(IrrPrac(p).r4) - pi;
    end
end

% Save
save(fullfile(CurPath, 'IrrPracList.mat'), 'IrrPrac');


%% Generate each frame and save, fov = 45
% Load
load IrrPanoList.mat;

% Path
PATH_pano = '/Users/Shared/D/1PKU北大_______/LiLab/PanoExp_v3/panoramaSet/Irregular';
PATH_video = '/Users/Shared/D/1PKU北大_______/LiLab/PanoExp_v3/video';  
duration_half = 6;
duration_fade = 2;
fr = 30;
fov = pi/4; % 45 degree
imgSize = 800;

% Read pano and separate
for i = 55:55
    img_pano = imread(fullfile(PATH_pano, sprintf('p%d.jpg', i)));
    img_pano = im2double(img_pano);  % 归一化到 [0,1]
    
    % Start angle
    vx_start = IrrPano(i).start;
    
    % Total frame
    frame_cnt = fr * duration_half * 2;
    
    % Generate each frame and save
    tic
    for frame = 1:frame_cnt
        vx = vx_start + 2 * pi / frame_cnt * frame;
        img_sep = separatePano(img_pano, fov, vx, 0, imgSize);
        img_frame = img_sep.img;
        rect = centerCropWindow2d(size(img_frame), [800, 800]);
        img_frame = imcrop(img_frame, rect);
        
        % save
        img_filename = fullfile(PATH_video, sprintf('p%d_%d.jpg', i, frame));
        imwrite(img_frame, img_filename);
    end
    toc
end

%% Generate practice frame
% Load IrrPracList
load IrrPracList.mat;

% Path
PATH_pano = '/Users/Shared/D/1PKU北大_______/LiLab/PanoExp_v3/panoramaSet/Irregular';
PATH_video = '/Users/Shared/D/1PKU北大_______/LiLab/PanoExp_v3/video';  
duration_half = 6;
duration_fade = 2;
fr = 30;
fov = pi/4; % 45 degree
imgSize = 800;

% Read pano and separate
for i = 1:2
    img_pano = imread(fullfile(PATH_pano, sprintf('prac%d.jpg', i)));
    img_pano = im2double(img_pano);  % 归一化到 [0,1]
    
    % Start angle
    vx_start = IrrPrac(i).start;
    
    % Total frame
    frame_cnt = fr * duration_half * 2;
    
    % Generate each frame and save
    tic
    for frame = 1:frame_cnt
        vx = vx_start + 2 * pi / frame_cnt * frame;
        img_sep = separatePano(img_pano, fov, vx, 0, imgSize);
        img_frame = img_sep.img;
        rect = centerCropWindow2d(size(img_frame), [800, 800]);
        img_frame = imcrop(img_frame, rect);
        
        % save
        img_filename = fullfile(PATH_video, sprintf('prac%d_%d.jpg', i, frame));
        imwrite(img_frame, img_filename);
    end
    toc
end


